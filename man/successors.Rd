% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/criticalpath.R
\name{successors}
\alias{successors}
\alias{all_successors}
\alias{all_predecessors}
\alias{predecessors}
\alias{is_redundant}
\alias{redundant}
\title{Successors and Predecessors}
\description{
A schedule is structured by activities and each activity has
zero, one or more successors and predecessors. Besides, a relation
may be redundant.
\itemize{
\item \strong{All Successors:}
List all successors from an activity: direct and indirect successors.
\itemize{
\item Usage: \code{Schedule$all_successors(id, ign_to=NULL)}
\itemize{
\item \strong{id} Activity id to be listed.
\item \strong{ign_to} A relation to be ignored: id -> ign_to.
Activities from this relation will be ignored.
}
}
\item \strong{All Predecessors:}
List all predecessors from an activity: direct or indirect predecessors.
\itemize{
\item Usage: \code{Schedule$all_predecessors(id, ign_from=NULL)}
\itemize{
\item \strong{id} Activity id to be listed.
\item \strong{ign_from} A relation to be ignored: ign_from -> id.
Activities from this relation will be ignored.
}
}
\item \strong{Is Redundant:}
Verify if a relation between two activities is redundant.
A relation A->C is redundant if there are A->C, A->B, B->C relations.
It returns a logical \code{TRUE} if an arc is redundant;
\code{FALSE} if it is not.
\itemize{
\item Usage: \code{Schedule$is_redundant(id_from, id_to)}
\itemize{
\item \strong{id_from} From activity id.
\item \strong{id_to} To activity id.
}
}
}
}
\examples{
# Create a schedule
schedule <- Schedule$new()
schedule$title <- "Fictitious Project Example"
schedule$reference <- "VANHOUCKE, Mario. Measuring time:
  improving project performance using earned value management.
  Gent: Springer, 2009, p. 18"

# Add activities and relations to it.
schedule$add_act_rel(  2, "a2" , 4, c(5, 12))
schedule$add_act_rel(  3, "a3" , 9, c(10))
schedule$add_act_rel(  4, "a4" , 1, c(6))
schedule$add_act_rel(  5, "a5" , 4, c(9))
schedule$add_act_rel(  6, "a6" , 5, c(7))
schedule$add_act_rel(  7, "a7" , 1, c(8,11))
schedule$add_act_rel(  8, "a8" , 7, c(12))
schedule$add_act_rel(  9, "a9" , 8, c(12))
schedule$add_act_rel( 10, "a10", 3, c(12))
schedule$add_act_rel( 11, "a11", 3, c(12))
schedule$add_act_rel( 12, "a12", 0)

schedule$all_successors(2) # 5, 9, 12
schedule$all_successors(7) # 8, 11, 12
schedule$all_successors(10) # 12

schedule$all_predecessors(2) # nothing
schedule$all_predecessors(7) # 6, 4
schedule$all_predecessors(10) # 3

schedule$is_redundant(2, 5)  #FALSE
schedule$is_redundant(2, 12) #TRUE
}
\seealso{
\itemize{
\item Critical Path Method Package: \link{criticalpath}
\item Schedule Class Definition: \link{Schedule}
}
}
\author{
Rubens Jose Rosa (\email{rubens@rubensjoserosa.com}),
Marcos dos Santos, Thiago Marques
}
