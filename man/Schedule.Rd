% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Schedule.R
\name{Schedule}
\alias{Schedule}
\alias{schedule}
\title{R6 Class Representing a Schedule}
\description{
A schedule has activities and relations data-frames.
With a Schedule, you can calculate the project critical path.
}
\details{
Alguns detalhes a mais.
Vamos ver no que vai dar.
}
\section{More Information}{

There is a \strong{See Also} section in the end of this page for more information.
}

\references{
Csardi, G. & Nepusz, T. (2005).
The Igraph Software Package for Complex Network Research.
\emph{InterJournal}. Complex Systems. 1695.
\href{https://www.researchgate.net/publication/221995787_The_Igraph_Software_Package_for_Complex_Network_Research}{Article}
/ \href{https://igraph.org/}{igraph}

Vanhoucke, M. (2009) \emph{Measuring Time}:
Improving Project Performance Using Earned Value Management.
Springer-Verlag US.
doi: \href{https://doi.org/10.1007/978-1-4419-1014-1}{10.1007/978-1-4419-1014-1}.

Vanhoucke, M. (2013) \emph{Project Management with Dynamic Scheduling}:
Baseline Scheduling, Risk Analysis and Project Control.
Springer-Verlag Berlin Heidelberg.
doi: \href{https://doi.org/10.1007/978-3-642-40438-2}{10.1007/978-3-642-40438-2}

Vanhoucke, M. (2014) \emph{Integrated Project Management and Control}:
First Comes the Theory, then the Practice.
Springer International Publishing Switzerland.
doi: \href{https://doi.org/10.1007/978-3-319-04331-9}{10.1007/978-3-319-04331-9}
}
\seealso{
Copiar o seealso do pacote \strong{criticalpath}

E, claro, apontar para o pacote!
}
\author{
Rubens Jose Rosa (rubens@rubensjoserosa.com),
Marcos dos Santos, Thiago Marques
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{title}}{A project title for identification.}

\item{\code{reference}}{A reference from project origin,
for example, a book, a paper, a corporation, or nothing.}

\item{\code{activities}}{Return activities in a schedule as data frame.}

\item{\code{nr_activities}}{Number of activities in a schedule as an integer value.}

\item{\code{has_any_activity}}{A logical value that indicate if the schedule has any activity.}

\item{\code{relations}}{Return relations in a schedule as data frame.}

\item{\code{nr_relations}}{Number of relations (arcs) in a schedule as an integer value.}

\item{\code{has_any_relation}}{A logical value that indicate if the schedule has any relation.}

\item{\code{duration}}{An integer value that indicate the duration of a schedule.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Schedule$new()}}
\item \href{#method-add_activity}{\code{Schedule$add_activity()}}
\item \href{#method-add_activities}{\code{Schedule$add_activities()}}
\item \href{#method-get_activity}{\code{Schedule$get_activity()}}
\item \href{#method-add_relation}{\code{Schedule$add_relation()}}
\item \href{#method-add_relations}{\code{Schedule$add_relations()}}
\item \href{#method-add_act_rel}{\code{Schedule$add_act_rel()}}
\item \href{#method-print}{\code{Schedule$print()}}
\item \href{#method-all_successors}{\code{Schedule$all_successors()}}
\item \href{#method-all_predecessors}{\code{Schedule$all_predecessors()}}
\item \href{#method-change_durations}{\code{Schedule$change_durations()}}
\item \href{#method-gantt_matrix}{\code{Schedule$gantt_matrix()}}
\item \href{#method-xy_gantt_matrix}{\code{Schedule$xy_gantt_matrix()}}
\item \href{#method-is_redundant}{\code{Schedule$is_redundant()}}
\item \href{#method-topoi_sp}{\code{Schedule$topoi_sp()}}
\item \href{#method-topoi_ad}{\code{Schedule$topoi_ad()}}
\item \href{#method-topoi_la}{\code{Schedule$topoi_la()}}
\item \href{#method-topoi_tf}{\code{Schedule$topoi_tf()}}
\item \href{#method-clone}{\code{Schedule$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Make a schedule with activities and relations between activities.
The method \code{Schedule$new(activities, relations)}
creates an schedule object from two data frames,
one containing activities lists and the other the precedence relations
between activities.
After creation, it is applied the Critical Path Method (CPM).

It is possible to create a empty schedule, without any activity or relation
with the constructor \code{Schedule$new()}.
After that, it is possible to add activity with \code{add_activity}
and relation with \code{add_relation} methods.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$new(activities = NULL, relations = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{activities}}{Data frame with activities.
If it is not informed, the schedule will be created without any activity.
Its structure is:
\itemize{
\item \strong{id:} Activity id. It is an integer number that
must be unique within a schedule.
\item \strong{name:} Activity name. It may be empty.
\item \strong{duration:} Activity duration. It is integer number without unit time.
It may be zero.
}}

\item{\code{relations}}{Data frame with precedence relations between activities.
If it is informed, the activities has to be informed too.
If is is not informed, the schedule will be created without any relation.
It is formed by predecessor activity e successor activity.
Its structure is:
\itemize{
\item \strong{from:} The id of predecessor activity. Must exist a activity with from id.
\item \strong{to:} The id of successor activity. Must exist a activity with to id.
\item \strong{type:} Specifies the type of relation between activities.
The default type is FS and its value may be: FS, FF, SS, SF, that means:
\itemize{
\item \strong{FS:} Finish-Start relation.
Activity to_id can only start after the finish of activity from_id.
\item \strong{FF:} Finish-Finish relation.
Activity to_id must finish together with activity from_id.
\item \strong{SS:} Start-Start relation.
Activity to_id must start together with activity from_id.
\item \strong{SF:} Start-Finish relation.
Activity to_id must finish when activity from_id starts.
}
\item \strong{lag:} The time period between activities that the successor activity
must be advanced, or lated, after activity from_id.
It must be an integer, less than, equal or greater than zero.
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Schedule object with CPM parameters calculated.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_activity"></a>}}
\if{latex}{\out{\hypertarget{method-add_activity}{}}}
\subsection{Method \code{add_activity()}}{
Add an activity to a schedule.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$add_activity(id, name = "", duration = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Activity id that will be used to make
relation between activities. It must be unique.}

\item{\code{name}}{The name of activity. The default is an empty string.}

\item{\code{duration}}{A number that represents the activity's duration.
It must be equal or grater than zero. The default value is zero.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Schedule object with an activity added and
the critical path calculated.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_activities"></a>}}
\if{latex}{\out{\hypertarget{method-add_activities}{}}}
\subsection{Method \code{add_activities()}}{
Add activities from a data frame to a schedule.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$add_activities(activities)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{activities}}{A data frame with the activities to be added.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Schedule object with activities added and CPM calculated.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_activity"></a>}}
\if{latex}{\out{\hypertarget{method-get_activity}{}}}
\subsection{Method \code{get_activity()}}{
Get a activity by id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$get_activity(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{An activity id as defined by the user.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame with one line with the activity,
or an error if activity id doesn't exist.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_relation"></a>}}
\if{latex}{\out{\hypertarget{method-add_relation}{}}}
\subsection{Method \code{add_relation()}}{
Add a relation to a schedule.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$add_relation(from, to, type = "FS", lag = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from}}{The id of predecessor activity.
Must exist a activity with from.}

\item{\code{to}}{The id of successor activity.
Must exist a activity with to.}

\item{\code{type}}{Specifies the type of relation between activities.
The default type is FS and its value may be: FS, FF, SS, SF, that means:
If type is not defined, it is assumed to be FS.

\strong{FS:} Finish-Start relation.
Activity to can only start after the finish of activity from.

\strong{FF:} Finish-Finish relation.
Activity to must finish together with activity from.

\strong{SS:} Start-Start relation.
Activity to must start together with activity from.

\strong{SF:} Start-Finish relation.
Activity to must finish when activity from starts.}

\item{\code{lag}}{If lag is not defined, it is assumed to be zero.
The time period between activities that the successor activity
must be advanced, or lated, after activity from.
It must be an integer, less than, equal or greater than zero.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Schedule object with CPM parameters calculated.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_relations"></a>}}
\if{latex}{\out{\hypertarget{method-add_relations}{}}}
\subsection{Method \code{add_relations()}}{
Add relations between activities from a data frame
to a schedule.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$add_relations(relations)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{relations}}{A data frame with the relations to be added.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Schedule object with relations added and CPM calculated.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_act_rel"></a>}}
\if{latex}{\out{\hypertarget{method-add_act_rel}{}}}
\subsection{Method \code{add_act_rel()}}{
Add an activity and her relations to a schedule.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$add_act_rel(
  id,
  name,
  duration,
  relations_id = c(),
  direction = "succ"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Activity id. The id will be used to make relation between activities.}

\item{\code{name}}{The name of activity.}

\item{\code{duration}}{A number that represents the activity's duration.
It must be equal or grater than zero.}

\item{\code{relations_id}}{A vector of ids such that will be linked with activity id.
It may be a relations of successor or predecessors.}

\item{\code{direction}}{Direction of relations_id: It may be "succ" or "pred".
If dir="succ" the relations_id will be the successor of the activity.
If dir="pred" the relations_id will be the predecessor of the activity.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Schedule object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print a description of the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Variable parameters}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Schedule object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-all_successors"></a>}}
\if{latex}{\out{\hypertarget{method-all_successors}{}}}
\subsection{Method \code{all_successors()}}{
List all successors from an activity:
direct or indirect successors.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$all_successors(id, ign_to = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Activity id to be listed.}

\item{\code{ign_to}}{A relation to be ignored: id -> ign_to.
Activities from this relation will be ignored.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector whith all activities ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-all_predecessors"></a>}}
\if{latex}{\out{\hypertarget{method-all_predecessors}{}}}
\subsection{Method \code{all_predecessors()}}{
List all predecessors from an activity:
direct or indirect predecessors.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$all_predecessors(id, ign_from = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Activity id to be listed.}

\item{\code{ign_from}}{A relation to be ignored: ign_from -> id.
Activities from this relation will be ignored.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector with all activities ids.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-change_durations"></a>}}
\if{latex}{\out{\hypertarget{method-change_durations}{}}}
\subsection{Method \code{change_durations()}}{
Change activities duration and calculate critical path.
This way is faster than creating a new schedule with new durations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$change_durations(new_durations)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_durations}}{A vector with new activities' duration.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Schedule object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-gantt_matrix"></a>}}
\if{latex}{\out{\hypertarget{method-gantt_matrix}{}}}
\subsection{Method \code{gantt_matrix()}}{
Create a matrix that represents a Gantt chart.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$gantt_matrix()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A matrix where "1" indicate that an activity is in execution.
In this matrix, the rows represents activities,
Whereas the columns represents the activity execution period.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-xy_gantt_matrix"></a>}}
\if{latex}{\out{\hypertarget{method-xy_gantt_matrix}{}}}
\subsection{Method \code{xy_gantt_matrix()}}{
Transform a Gantt matrix in x, y coordinates.
Each point greater than zero in a Gantt matrix becomes a x, y coordinate.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$xy_gantt_matrix(gantt = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{gantt}}{A Gantt Matrix.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A matrix x, y and weight.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_redundant"></a>}}
\if{latex}{\out{\hypertarget{method-is_redundant}{}}}
\subsection{Method \code{is_redundant()}}{
Verify if a relation between two activities is redundant.
A relation A->C is redundant if there are A->C, A->B, B->C relations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$is_redundant(id_from, id_to)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_from}}{Activity id from.}

\item{\code{id_to}}{Activity id to.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A logical TRUE if an arc is redundant; FALSE if not.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-topoi_sp"></a>}}
\if{latex}{\out{\hypertarget{method-topoi_sp}{}}}
\subsection{Method \code{topoi_sp()}}{
\strong{SP Serial or Parallel Topological Indicator:}
It shows the closeness of a network to a serial or parallel graph.
As the network becomes serial, the SP increase, until one,
when the network totally serial.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$topoi_sp()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A number between 0 and 1, inclusive.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-topoi_ad"></a>}}
\if{latex}{\out{\hypertarget{method-topoi_ad}{}}}
\subsection{Method \code{topoi_ad()}}{
\strong{AD Activity Distribution Topological Indicator:}
Measures the distribution of the activities over the levels.
If AD is approximately equal zero, each level has same numbers of activities.
Otherwise, if AD is equal one, the quantity of each level is not
uniformly distributed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$topoi_ad()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A number between 0 and 1, inclusive.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-topoi_la"></a>}}
\if{latex}{\out{\hypertarget{method-topoi_la}{}}}
\subsection{Method \code{topoi_la()}}{
\strong{LA Length of Arcs Topological Indicator:}
Measures the presence of long arcs based on the difference between
the progressive level of the end activity and the start node
of each relation.
If LA is approximately equal zero, the progressive level between
activities are as far as possible.
Otherwise, if LA is equal one, the relation distance are one.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$topoi_la()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A number between 0 and 1, inclusive.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-topoi_tf"></a>}}
\if{latex}{\out{\hypertarget{method-topoi_tf}{}}}
\subsection{Method \code{topoi_tf()}}{
\strong{TF Topological Float Indicator:}
Measures the topological float of each activity.
If TF = 0, there is no float between activities.
If TF = 1, there is float between activities
and they be shift without affecting other activities.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$topoi_tf()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A number between 0 and 1, inclusive.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Schedule$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
