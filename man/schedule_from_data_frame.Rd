% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/criticalpath.R
\name{schedule_from_data_frame}
\alias{schedule_from_data_frame}
\alias{from_data_frame}
\alias{new_schedule}
\alias{schedule_new}
\alias{new}
\title{Create a schedule object from data frames}
\arguments{
\item{activities}{Data frame with activities.
If it is not informed, the schedule will be created without any activity.
Its structure is:
\itemize{
\item \strong{id:} Activity id, an integer number that
must be unique within a schedule.
It will be used to make relation between activities.
\item \strong{name:} The name of activity. The default is an empty string.
\item \strong{duration:} A number that represents the activity's duration.
It is integer number without time unit.
It must be equal or grater than zero. The default value is zero.
}}

\item{relations}{Data frame with precedence relations between activities.
If it is informed, the activities has to be informed too.
If is is not informed, the schedule will be created without any relation.
It is formed by predecessor activity e successor activity.
Its structure is:
\itemize{
\item \strong{from:} The id of predecessor activity. Must exist a activity with from id.
\item \strong{to:} The id of successor activity. Must exist a activity with to id.
\item \strong{type:} Specifies the type of relation between activities.
The default type is FS and its value may be: FS, FF, SS, SF, that means:
\itemize{
\item \strong{FS:} Finish-Start relation.
Activity to_id can only start after the finish of activity from_id.
\item \strong{FF:} Finish-Finish relation.
Activity to_id must finish together with activity from_id.
\item \strong{SS:} Start-Start relation.
Activity to_id must start together with activity from_id.
\item \strong{SF:} Start-Finish relation.
Activity to_id must finish when activity from_id starts.
}
\item \strong{lag:} The time period between activities that the successor activity
must be advanced, or lated, after activity from_id.
It must be an integer, less than, equal or greater than zero.
}}
}
\value{
A Schedule object with CPM parameters calculated.
}
\description{
Make a schedule with activities and relations between activities.
The method \code{Schedule$new(activities, relations)}
creates an schedule object from two data frames,
one containing activities lists and the other the precedence relations
between activities.
After creation, it is applied the Critical Path Method (CPM).

It is possible to create a empty schedule, without any activity or relation
with the constructor \code{Schedule$new()}.
After that, it is possible to add activity with \code{add_activity}
and relation with \code{add_relation} methods.
}
\examples{

# An empty schedule.
schedule <- Schedule$new()

# A schedule with activities and relations.
activities <- data.frame(
  id        = 1:17,
  name      = paste("a", as.character(1:17), sep=""),
  duration  = c(1,2,2,4,3,3,3,2,1,1,2,1,1,1,1,2,1)
)

relations <- data.frame(
  from = c(1, 1, 2, 2, 2, 3, 3, 3,  3,  4,  5,  6,
           7,  8,  9, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15),
  to   = c(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 11,
           12, 13, 14, 15, 16, 17, 16, 17, 16, 17, 16, 17, 16, 17)
)
schedule <- Schedule$new(activities, relations)
schedule$title <- "Project 1: Cost Information System"
schedule$reference <- "VANHOUCKE, Mario.
Integrated project management and control:
  first comes the theory, then the practice.
  Gent: Springer, 2014, p. 6"
}
\seealso{
\link{add_activity}, \link{add_relation}, \link{criticalpath}, \link{Schedule}.
}
\author{
Rubens Jose Rosa (rubens@rubensjoserosa.com),
Marcos dos Santos, Thiago Marques
}
